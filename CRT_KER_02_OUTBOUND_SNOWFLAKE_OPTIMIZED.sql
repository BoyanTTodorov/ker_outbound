CREATE OR REPLACE VIEW CRT_KER_02_OUTBOUND AS
SELECT 
    MD5(PE.PECACT || PE.PECDPO || PE.PERODP || PE.PENANN || PE.PENPRE || OE.OENANN || OE.OENODP) AS PK_FACT_OUTBOUND,
    TO_CHAR(MOTHER.SHDCOR, 'DD/MM/YYYY') AS INTEGRATION_DATE,
    TO_CHAR(MOTHER.SHDCOR, 'HH24:MI') AS INTEGRATION_TIME,
    'Reflex WEB B' AS ENVIRONMENT,
    'B' AS BUILDING,
    SUBSTR(PREP_LINES.GRADE, 1, 3) AS REFLEX_CLIENT,
    PE.PECDES AS REFLEX_DESTINATION,
    SUBSTR(PREP_LINES.WAVE, 1, 16) AS WAVING_DATE,
    SUBSTR(PREP_LINES.WAVE, 18, 3) AS WAVING_CODE,
    CASE WHEN CO.CORCDE IS NULL THEN ' ' ELSE 'SENT' END AS ORDER_INSERT_UPDATE,
    CASE WHEN COALESCE(SG1.CGCOD, SG2.CGCOD) IS NULL THEN ' ' ELSE 'DONE' END AS SHIPPING_REQUEST,
    COALESCE(MOTHER.SHCDOR, CHILD.SHCDOR) AS BRAND,
    COALESCE(MOTHER.SHRDOR, CHILD.SHRDOR) AS SAP_ORDERID,
    OE.OECDES AS CUSTOMER_CODE,
    COALESCE(MOTHER.SHPAYD, CHILD.SHPAYD) AS COUNTRY,
    MOTHER.SHCTRP AS SAP_CARRIER,
    CG.CGCTRP AS REFLEX_CARRIER,
    TP.TPLTRP AS CARRIER_NAME,
    SUBSTR(PREP_LINES.GRADE, 1, 3) AS OWNER,
    SUBSTR(PREP_LINES.GRADE, 4, 3) AS QUALITY,
    CASE 
        WHEN CHILD.SHCACT IS NULL THEN LPAD(PE.PENANN, 2 , '0') || '/' || LPAD(PE.PENPRE, 9, '0') 
        ELSE LPAD(CHILD.SHNANN, 2 , '0') || '/' || LPAD(CHILD.SHNPRP, 9, '0') 
    END AS PREPARATION_NUMBER,
    TO_CHAR(COALESCE(MOTHER.SHDDEL, CHILD.SHDDEL), 'DD/MM/YYYY') AS DELIVERY_DATE,
    LPAD(PE.PEJOCA, 2, '0') || '/' || LPAD(PE.PEMOCA, 2, '0') || '/' || LPAD(PE.PESSCA, 2, '0') || LPAD(PE.PEANCA, 2, '0') AS LOAD_DATE,
    PE.PECCHA AS LOAD_CODE,
    CASE 
        WHEN U9.U9NARV > 0 THEN LPAD(U9.U9NARV, 2, '0') || '/' || LPAD(U9.U9NRDV, 9, '0') 
        ELSE ' ' 
    END AS RDV,
    CG.CGNPLC AS PLATE_NUMBER,
    ' ' AS TRUCK_DEPARTURE,
    CASE 
        WHEN HU.HUCDPO IS NOT NULL THEN TO_CHAR(TK35HEURE, 'DD/MM/YYYY HH24:MI') 
        ELSE ' ' 
    END AS TK35_TRANSMISSION,
    CASE 
        WHEN CHILD.SHCACT IS NULL THEN ' ' 
        ELSE CASE WHEN CHILD.SHTTKP = 0 THEN ' ' ELSE TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY HH24:MI') END 
    END AS TK05_PACKED_DATE,
    CASE 
        WHEN CHILD.SHCACT IS NULL THEN ' ' 
        ELSE CASE WHEN CHILD.SHTTKS = 0 THEN ' ' ELSE TO_CHAR(CHILD.SHDTKS, 'DD/MM/YYYY HH24:MI') END 
    END AS TK05_SHIPPED_DATE,
    COALESCE(CHILD.SHCINV, MOTHER.SHCINV) AS INVOICE_CODE,
    YMX.MO_ARRIVAL_DATE AS TRUCK_GATE_ARRIVAL,
    YMX.MO_BAY_DATE AS TRUCK_BAY_ARRIVAL,
    YMX.MO_DEPARTURE_DATE AS EVENT_490,
    CASE 
        WHEN CHILD.SHCACT IS NULL THEN 
            CASE WHEN TO_CHAR(MOTHER.SHDINV, 'DD/MM/YYYY HH24:MI') = '01/01/0001 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDINV, 'DD/MM/YYYY HH24:MI') END
        ELSE 
            CASE WHEN TO_CHAR(CHILD.SHDINV, 'DD/MM/YYYY HH24:MI') = '01/01/0001 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDINV, 'DD/MM/YYYY HH24:MI') END
    END AS INVOICE_DATE,
    CASE 
        WHEN PE.PETSOP = '1' AND PE.PETSOL = '1' THEN 0 
        ELSE PREP_LINES.QTY_ORDERED 
    END AS QUANTITY_ORDERED,
    PE.PETBPV AS QUANTITY_PICKED,
    CASE 
        WHEN PE.PETSOP = '1' THEN PE.PETBPV 
        ELSE COALESCE(PREP_LINES_QTY.QTY_PACK, 0) 
    END AS QUANTITY_PACKED,
    CASE 
        WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN 0 
        ELSE COALESCE(DMS_SUB.QTY_DMS, 0) 
    END AS QUANTITY_DMS,
    CASE 
        WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_COL_EXP, 0) 
        ELSE COALESCE(QTY_COL_LOAD, 0) 
    END AS PARCELS_LOADED,
    CASE 
        WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_PIE_EXP, 0) 
        ELSE COALESCE(QTY_PIE_LOAD, 0) 
    END AS PIECES_LOADED,
    CASE 
        WHEN PE.PETSOP = '1' THEN COALESCE(GS.QTY_COL_EXP, 0) 
        ELSE COALESCE(QTY_COL, 0) 
    END AS CARTONS,
    CASE 
        WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN 'CANCEL' 
        ELSE ' ' 
    END AS TK05_CANCEL_FLAG,
    CASE 
        WHEN CHILD.SHCACT IS NULL THEN 
            CASE 
                WHEN MOTHER.SHTTKP = 0 AND (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) THEN ' ' 
                ELSE TO_CHAR(MOTHER.SHDTKP, 'DD/MM/YYYY HH24:MI') 
            END
        ELSE 
            CASE 
                WHEN CHILD.SHTTKP = 0 AND (PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0)) THEN ' ' 
                ELSE TO_CHAR(CHILD.SHDTKP, 'DD/MM/YYYY HH24:MI') 
            END 
    END AS TK05_CANCEL_DATE,
	------------======================= INITIAL_PLANNED_PACKING_DATE and INITIAL_PLANNED_PACKING_TIME need matching to existing fields
	CASE WHEN MOTHER.SHDIPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPA, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPA, 'DD/MM/YYYY') END ) END AS INITIAL_PLANNED_PACKING_DATE,
	CASE WHEN MOTHER.SHDIPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDIPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPA, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPA, 'HH24:MI')    END ) END AS INITIAL_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDPPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDPPA, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDPPA, 'DD/MM/YYYY') END ) END AS PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDPPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDPPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDPPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDPPA, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDPPA, 'HH24:MI')    END ) END AS PLANNED_PACKING_TIME ,
	------------======================= INITIAL_LATEST_PLANNED_PACKING_DATE and INITIAL_LATEST_PLANNED_PACKING_TIME need matching to existing fields
	CASE WHEN MOTHER.SHDILP IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDILP, 'DD/MM/YYYY') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDILP, 'DD/MM/YYYY') END ) END AS INITIAL_LATEST_PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDILP IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDILP, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDILP, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDILP, 'HH24:MI')    = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDILP, 'HH24:MI')    END ) END AS INITIAL_LATEST_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDLPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDLPA, 'DD/MM/YYYY') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDLPA, 'DD/MM/YYYY') END ) END AS LATEST_PLANNED_PACKING_DATE ,
	CASE WHEN MOTHER.SHDLPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDLPA, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDLPA, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDLPA, 'HH24:MI')    in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDLPA, 'HH24:MI')    END ) END AS LATEST_PLANNED_PACKING_TIME ,
	CASE WHEN MOTHER.SHDIPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPU, 'DD/MM/YYYY') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPU, 'DD/MM/YYYY') END ) END AS INITIAL_PICKUP_DATE ,
	CASE WHEN MOTHER.SHDIPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDIPU, 'DD/MM/YYYY HH24:MI') in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(CHILD.SHDIPU, 'HH24:MI')    END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDIPU, 'HH24:MI')    in ('00/00/0000 00:00','01/01/0001 00:00') THEN ' ' ELSE TO_CHAR(MOTHER.SHDIPU, 'HH24:MI')    END ) END AS INITIAL_PICKUP_TIME ,
	NULL AS PICKUP_DATE ,
	NULL AS PICKUP_TIME ,
	PE.PECMOP AS FLOW,
--    PE.PECMOP AS FLOW_DESCRIPTION,
    --G Sykes/M Proserpio - added case statement so flow_description is different from "flow"
    case	when PE.PECMOP = 'C1'  then 'CA'
            when PE.PECMOP = 'EDO' then 'Export Doc (GB Malpensa)'
            when PE.PECMOP = 'ESD' then 'Export Doc '||CHR(38)||' Stop'||CHR(38)||'Go'
            when PE.PECMOP = 'EXP' then 'Export Doc (Internal)'
            when PE.PECMOP = 'FCA' then 'FCA/EXW'
            when PE.PECMOP = 'FES' then 'EXW - Export Doc '||CHR(38)||' Stop'
            when PE.PECMOP = 'FEX' then 'EXW - Export Doc'
            when PE.PECMOP = 'FOG' then 'FCA + OK to Ship'
            when PE.PECMOP = 'FOS' then 'FCA + OK to Ship '||CHR(38)||' Stop'||CHR(38)||'G'
            when PE.PECMOP = 'FSG' then 'FCA + Stop'||CHR(38)||'Go'
            when PE.PECMOP = 'HAL' then 'Hallmarking'
            when PE.PECMOP = 'MTM' then 'Make to Order, Make to Measure'
            when PE.PECMOP = 'TK9' then ''
            when PE.PECMOP = 'VAN' then 'Vanilla'
            when PE.PECMOP = 'VIN' then 'Invoice Required'
            when PE.PECMOP = 'VOK' then 'OK to Ship'
            when PE.PECMOP = 'VOS' then 'Stop '||CHR(38)||' GO '||CHR(38)||' OK to Ship'
            when PE.PECMOP = 'VSI' then 'Invoice Required '||CHR(38)||' Stop'
            when PE.PECMOP = 'VST' then 'Vanilla Stop '||CHR(38)||' GO'
            when PE.PECMOP = 'WAN' then 'do not delete'
            when PE.PECMOP = 'WTP' then 'do not delete'
		ELSE NULL END AS FLOW_DESCRIPTION,
	CASE WHEN MOTHER.SHTHZM IS NULL THEN CHILD.SHTHZM ELSE MOTHER.SHTHZM END AS FLAG_HAZMAT ,
	CASE WHEN MOTHER.SHTFSC IS NULL THEN CHILD.SHTFSC ELSE MOTHER.SHTFSC END AS FLAG_FSC ,
	CASE WHEN MOTHER.SHTJEW IS NULL THEN CHILD.SHTJEW ELSE MOTHER.SHTJEW END AS FLAG_JEWELLERY ,
	FLAG_PACKAGING_JEWELRY_SUB AS FLAG_PACKAGING_JEWELLERY,
	CASE WHEN MOTHER.SHTHMK IS NULL THEN CHILD.SHTHMK ELSE MOTHER.SHTHMK END AS FLAG_HALMARKING,
	CASE WHEN MOTHER.SHSHMK IS NULL THEN CHILD.SHSHMK ELSE MOTHER.SHSHMK END AS HALMARKING_STATUS ,
	CASE WHEN MOTHER.SHTCIT IS NULL THEN CHILD.SHTCIT ELSE MOTHER.SHTCIT END AS FLAG_IMPACT_CITES,
	CASE WHEN MOTHER.SHSCIT IS NULL THEN CHILD.SHSCIT ELSE MOTHER.SHSCIT END AS CITES_STATUS,
	CASE WHEN VAS.VAS_CODE IS NULL THEN '0' ELSE '1' END AS VAS_FLAG, --2025-03-17 
	VAS.VAS_CODE AS VAS_CODE , --2025-03-17 
	VAS.VAS_CLUSTER AS VAS_CLUSTER,  --2025-03-17 
	MOTHER.SHMOTR AS SAP_MEAN_OF_TRANSPORT,
	CG.CGCTMT AS REFLEX_MEAN_OF_TRANSPORT,
	CASE WHEN MOTHER.SHCLUS IS NULL THEN CHILD.SHCLUS ELSE MOTHER.SHCLUS END AS "CLUSTER" ,
	CASE WHEN MOTHER.SHCHAN IS NULL THEN CHILD.SHCHAN ELSE MOTHER.SHCHAN END AS CHANNEL ,
	CASE WHEN MOTHER.SHTCEE IS NULL THEN (CASE WHEN CHILD.SHTCEE = '1' THEN 'CEE' ELSE 'EXTRA' END ) ELSE (CASE WHEN MOTHER.SHTCEE = '1' THEN 'CEE' ELSE 'EXTRA' END ) END AS FLAG_CEE ,
	CASE WHEN MOTHER.SHTTSP IS NULL THEN CHILD.SHTTSP ELSE MOTHER.SHTTSP END AS FLAG_IS_TO_SHIP ,
	CASE WHEN MOTHER.SHTSTP IS NULL THEN CHILD.SHTSTP ELSE MOTHER.SHTSTP END AS FLAG_IS_STOP ,
	/* NEW VERSION OF THE FLAG IS CANCELLED COLUMN */
	CASE WHEN PE.PET1PP = 0 OR (PE.PETSOL = '1' AND PE.PET1PP > 0) THEN '1' ELSE '0' END AS FLAG_IS_CANCELLED ,
	CASE WHEN MOTHER.SHTMAA IS NULL THEN CHILD.SHTMAA ELSE MOTHER.SHTMAA END AS FLAG_MAX_ATTENTION ,
	CASE WHEN MOTHER.SHNPRI IS NULL THEN CHILD.SHNPRI ELSE MOTHER.SHNPRI END AS PRIORITY ,
	CASE WHEN MOTHER.SHDOCT IS NULL THEN CHILD.SHDOCT ELSE MOTHER.SHDOCT END AS DOCUMENT_TYPE ,
	CASE WHEN MOTHER.SHFLOT IS NULL THEN CHILD.SHFLOT ELSE MOTHER.SHFLOT END AS FLOW_TYPE ,
	CASE WHEN MOTHER.SHLROU IS NULL THEN CHILD.SHLROU ELSE MOTHER.SHLROU END AS ROUTE ,
	CASE WHEN MOTHER.SHLSHC IS NULL THEN CHILD.SHLSHC ELSE MOTHER.SHLSHC END AS SHIPPING_CONDITION ,
	CASE WHEN MOTHER.SHCDEG IS NULL THEN CHILD.SHCDEG ELSE MOTHER.SHCDEG END AS CODE_DELIVERY_GROUP ,
	CASE WHEN CHILD.SHLDEB IS NULL THEN MOTHER.SHLDEB ELSE CHILD.SHLDEB END AS DELIVERY_BLOCK,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHLSHB ELSE CHILD.SHLSHB END AS SHIPMENT_BLOCKED,
	CASE WHEN MOTHER.SHTREO IS NULL THEN CHILD.SHTREO ELSE MOTHER.SHTREO END AS FLAG_IS_RELEASE_OD ,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHREXT ELSE CHILD.SHREXT END AS EXTERNAL_ID,
	CASE WHEN CHILD.SHCACT IS NULL THEN MOTHER.SHREX5 ELSE CHILD.SHREX5 END AS ORDER_ID_SENT_IN_TK05,
	CASE WHEN CHILD.SHTURG IS NULL THEN MOTHER.SHTURG ELSE CHILD.SHTURG END AS FLAG_URGENT,
	CASE WHEN CHILD.SHTCUT IS NULL THEN MOTHER.SHTCUT ELSE CHILD.SHTCUT END AS FLAG_CUT_OFF,
	CASE WHEN CHILD.SHTDMM IS NULL THEN MOTHER.SHTDMM ELSE CHILD.SHTDMM END AS FLAG_DMM_RECALCULATION,
	CASE WHEN MOTHER.SHDCPU IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCPU, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCPU, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCPU, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCPU, 'DD/MM/YYYY HH24:MI') END ) END AS DMM_PICKUP ,
	CASE WHEN MOTHER.SHDCPA IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCPA, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCPA, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCPA, 'DD/MM/YYYY HH24:MI') END ) END AS DMM_PACKING ,
	substr(PE."Commenti",1,70) AS "Commenti",
	/*CASE WHEN PE.PETOPD  ='1' THEN 'YES' ELSE 'NO' END AS FLAG_ORDER_DESACTIVATED,*/
    PE.PETOPD AS FLAG_ORDER_DESACTIVATED,
	CASE WHEN MOTHER.SHDCOR IS NULL THEN (CASE WHEN TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(CHILD.SHDCOR, 'DD/MM/YYYY HH24:MI') END ) ELSE (CASE WHEN TO_CHAR(MOTHER.SHDCOR, 'DD/MM/YYYY HH24:MI') = '00/00/0000 00:00' THEN ' ' ELSE TO_CHAR(MOTHER.SHDCOR, 'DD/MM/YYYY HH24:MI') END ) END AS "CREATION ORDER DATE",
	GREATEST(nvl(OE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(OE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
			,nvl(PREP_LINES.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(PE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(MOTHER.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(MOTHER.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(CHILD.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(CHILD.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(CG.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(CG.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(U9.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(U9.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(U6.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(U6.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(TP.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(TP.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(HU.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(HU.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(PREP_LINES_QTY.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES_QTY.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
            ,nvl(GS.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(GS.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--            ,nvl(I37.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(I37.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
			)
	AS UPDATED_DATE,
	'0' as ISDELETED,
    PREP_LINES.PRODCAT AS PRODUCT_CATEGORY
FROM MODELS.KERING_GLOBE.HLODPEP OE
-- BELOW EDITED WORKS
INNER JOIN	(
			SELECT
			P1.PECDOD , P1.P1CACT ,P1.P1NANO ,P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE, MAX(P1.P1CPRP || P1.P1CQAL) AS GRADE , SUM(P1.P1QODP) AS QTY_ORDERED,
				MIN((CASE WHEN P1.P1JOCA > 0 THEN CAST(LPAD(P1.P1SSCA, 2, '0') || LPAD(P1.P1ANCA, 2, '0') || '-' || LPAD(P1.P1MOCA, 2, '0') || '-' || LPAD(P1.P1JOCA, 2, '0')  
				|| ' ' || SUBSTR(lpad(nvl(LC.LCHDCA,0),6,0),1,2) ||':'|| SUBSTR(lpad(nvl(LC.LCHDCA,0),6,0),3,2) || ' ' || P1.P1CDLA AS CHAR(20)) ELSE ' ' END)) AS WAVE
                ,MAX(CA.CAPRCA) AS PRODCAT --BI FIELD
                ,MAX(CASE WHEN P1.P1CART LIKE '7%' THEN 1 ELSE 0 END) AS FLAG_PACKAGING_JEWELRY_SUB
				,MAX(P1.HVR_CHANGE_TIME) HVR_CHANGE_TIME
			FROM 
				MODELS.KERING_GLOBE.HLPRPLP P1

            INNER JOIN MODELS.KERING_GLOBE.KBCARTP CA on CA.CACACT = P1.P1CACT AND P1.P1CART = CA.CASKUC --BI ADDITIONAL JOIN
			LEFT  JOIN MODELS.KERING_GLOBE.HLLANCP LC ON LC.LCCDPO=P1.P1CDPO AND LC.LCSSCA=P1.P1SSCA AND LC.LCANCA=P1.P1ANCA AND LC.LCMOCA=P1.P1MOCA AND LC.LCJOCA=P1.P1JOCA AND LC.LCCDLA=P1.P1CDLA 
			WHERE P1.P1CACT = '100' AND P1.P1CDPO='001'
			GROUP BY P1.PECDOD, P1.P1CACT, P1.P1NANO, P1.P1NODP, P1.P1CDPO, P1.P1NANP, P1.P1NPRE
			) PREP_LINES ON PREP_LINES.PECDOD = OE.OECDPO AND PREP_LINES.P1CACT = OE.OECACT AND PREP_LINES.P1NANO = OE.OENANN AND PREP_LINES.P1NODP = OE.OENODP
INNER JOIN	(
            SELECT *
            FROM MODELS.KERING_GLOBE.HLPRENP PE
            --EDITED NOT CORRECT
            LEFT JOIN (
            SELECT 
            CONCOM, LISTAGG(COTXTC, ' | ') 
            WITHIN GROUP (ORDER BY CONLCO) AS "Commenti"
            --ON OVERFLOW TRUNCATE '...' AS "Commenti" 
            FROM MODELS.KERING_GLOBE.HLCOMMP CO 
            GROUP BY CONCOM) CO ON PE.PENCOM = CO.CONCOM
            --PLACEMENT OF OVERFLOW TRUNCATE
            WHERE 
            PE.PECACT='100' AND 
            PE.PECDPO='001' 
--END OF EDITED WORKS
            ) PE ON PREP_LINES.P1CDPO = PE.PECDPO AND PREP_LINES.P1CACT = PE.PECACT AND PE.PENANN = PREP_LINES.P1NANP AND PE.PENPRE = PREP_LINES.P1NPRE 
LEFT  JOIN MODELS.KERING_GLOBE.KBSHIPP MOTHER ON MOTHER.SHCDEP = OECDPO AND MOTHER.SHCACT = OECACT AND MOTHER.SHCDOR = OECDDO AND MOTHER.SHRDOR = OERODP AND SHNANN = 0 
LEFT  JOIN MODELS.KERING_GLOBE.KBSHIPP CHILD ON CHILD.SHCDEP = PECDPO AND CHILD.SHCACT = PECACT AND  CHILD.SHNANN = PENANN AND CHILD.SHNPRP = PENPRE 
LEFT  JOIN MODELS.KERING_GLOBE.HLCHARP CG ON CG.CGCDPO = PE.PECDPO AND PE.PESSCA = CG.CGSSCA AND PE.PEANCA = CG.CGANCA AND PE.PEMOCA = CG.CGMOCA AND PE.PEJOCA = CG.CGJOCA AND PE.PECCHA = CG.CGCCHA 
LEFT  JOIN MODELS.KERING_GLOBE.HLRDVCP U9 ON U9.U9CDPO = CG.CGCDPO AND U9.U9SSCA = CG.CGSSCA AND U9.U9ANCA = CG.CGANCA AND U9.U9MOCA = CG.CGMOCA AND U9.U9JOCA = CG.CGJOCA AND U9.U9CCHA = CG.CGCCHA 
LEFT  JOIN MODELS.KERING_GLOBE.HLRDVTP U6 ON U9.U9CDPO = U6.U6CDPO AND U9.U9NARV = U6.U6NARV AND U9.U9NRDV = U6.U6NRDV 
LEFT  JOIN MODELS.KERING_GLOBE.HLTRSPP TP ON CG.CGCTRP = TP.TPCTRP 
LEFT  JOIN  (	
--EDITED WORKS
            SELECT HUCDPO, HUDNUM, HUPORD, MAX(HUDMAJ) AS TK35HEURE, MAX(HVR_CHANGE_TIME) HVR_CHANGE_TIME
            --G Sykes / M Proserpio - changed HUDCRE to HUDMAJ 
            FROM MODELS.KERING_GLOBE.KB35HUP
            WHERE HUCDPO = '001' AND HVR_CHANGE_TIME IS NULL--EDITED REMOVED TRUNC 
            GROUP BY HUCDPO, HUDNUM, HUPORD
--END OF EDITED WORKS
            ) HU ON PE.PECDPO = HU.HUCDPO AND PE.PERODP = HU.HUDNUM AND HU.HUPORD = LPAD(PE.PENANN, 2, '0') || LPAD(PE.PENPRE, 9, '0') 
LEFT  JOIN	(
			SELECT P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE, SUM(LG.LGQLPG) AS QTY_PACK
				, SUM(CASE WHEN EM.EMC1EM = 'DMS' THEN LG.LGQLPG ELSE 0 END) AS QTY_DMS2
				, COUNT(DISTINCT GE.GENCOL) AS QTY_COL , COUNT(DISTINCT CASE WHEN SU.SUTSCG = '1' THEN GE.GENCOL ELSE NULL END) AS QTY_COL_LOAD
				, SUM(CASE WHEN SU.SUTSCG = '1' THEN LG.LGQLPG ELSE 0 END) AS QTY_PIE_LOAD
                , MAX(GE.HVR_CHANGE_TIME) HVR_CHANGE_TIME
			FROM MODELS.KERING_GLOBE.HLPRPLP P1
			INNER JOIN MODELS.KERING_GLOBE.HLLPRGP LG ON LG.LGCDPO = P1.P1CDPO AND LG.LGCACT = P1.P1CACT AND LG.LGNANN = P1.P1NANN AND LG.LGNLPR = P1.P1NLPR  --EDITED REMOVED TRUNC 
			INNER JOIN MODELS.KERING_GLOBE.HLGEINP GE ON GE.GENGEI = LG.LGNGEI AND LG.LGCDPO = GE.GECDPO AND LG.LGCACT = GE.GECACT AND GE.GENCOL <> ' '  --EDITED REMOVED TRUNC 
			INNER JOIN MODELS.KERING_GLOBE.HLSUPPP SU ON SU.SUCDPO = LG.LGCDPO AND SU.SUNSUP = GE.GENSUP  --EDITED REMOVED TRUNC 
			INNER JOIN MODELS.KERING_GLOBE.HLEMPLP EM ON SU.SUCDPO = EM.EMCDPO AND SU.SUNEMP = EM.EMNEMP  --EDITED REMOVED TRUNC 
			WHERE P1.HVR_CHANGE_TIME IS NULL --EDITED REMOVED TRUNC 
			GROUP BY P1.P1CDPO, P1.P1CACT, P1.P1NANP, P1.P1NPRE
			) PREP_LINES_QTY ON PREP_LINES_QTY.P1CDPO = PE.PECDPO AND PREP_LINES_QTY.P1CACT = PE.PECACT AND PREP_LINES_QTY.P1NANP = PE.PENANN AND  PREP_LINES_QTY.P1NPRE = PE.PENPRE
LEFT  JOIN  (
            SELECT P1CACT,P1CDPO,P1NANP,P1NPRE,SUM(P1QODP) AS QTY_DMS --,VLCFPR 
            FROM MODELS.KERING_GLOBE.HLPRPLP
            INNER JOIN MODELS.KERING_GLOBE.HLARVLP ON P1CACT=VLCACT AND P1CART=VLCART AND VLCVLA = '03'
            WHERE VLCFPR IN ('DMS') --EDITED for checking for multiply values
            GROUP BY P1CACT,P1CDPO,P1NANP,P1NPRE
            ) DMS_SUB ON DMS_SUB.P1CDPO = PE.PECDPO AND DMS_SUB.P1CACT = PE.PECACT AND DMS_SUB.P1NANP = PE.PENANN AND DMS_SUB.P1NPRE = PE.PENPRE
LEFT  JOIN	(
			SELECT GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE, COUNT(DISTINCT GS.GSNCOL) AS QTY_COL_EXP, SUM(GS.GSQGEI) AS QTY_PIE_EXP, max(GS.HVR_CHANGE_TIME) HVR_CHANGE_TIME
			FROM MODELS.KERING_GLOBE.HLPRPLP P1
			INNER JOIN MODELS.KERING_GLOBE.HLGESOP GS ON GS.GSCACT = P1.P1CACT AND GS.GSCDPO = P1.P1CDPO AND GS.GSNALI = P1.P1NANN AND GS.GSNLPR = P1.P1NLPR 
			WHERE P1.P1CACT='100' AND P1.P1CDPO='001' --EDITED REMOVED TRUNC 
			GROUP BY GS.GSCDPO, GS.GSCACT, GS.GSNAPP, GS.GSNPRE
			) GS ON GS.GSCDPO = PE.PECDPO AND GS.GSCACT = PE.PECACT AND GS.GSNAPP = PE.PENANN AND GS.GSNPRE = PE.PENPRE
--LEFT  JOIN	(
--			SELECT I37ORNB, max(HVR_CHANGE_TIME) HVR_CHANGE_TIME, max(HVR_CHANGE_TIME) HVR_CHANGE_TIME FROM MODELS.KERING_GLOBE.KBOR12P WHERE I37VST = '80-00' AND trunc(HVR_CHANGE_TIME) IS NULL
--			GROUP BY   I37ORNB --hardcoded values for VAS_TYPE and VAS_LAYOUT based on these join conditions
--			) I37 ON I37.I37ORNB = OE.OERODP 
			-- G Sykes/M Proserpio updated VAS logic using table FACT_KER_02_OUTBOUND_VAS (updated first in procedure)
LEFT  JOIN	FACT_KER_02_OUTBOUND_VAS VAS ON PE.PECDPO = VAS.P1CDPO  AND PE.PECACT = VAS.P1CACT AND PE.PENANN = VAS.P1NANP AND PE.PENPRE = VAS.P1NPRE
LEFT  JOIN	(
			SELECT CO.CORCDE FROM
                MODELS.KERING_GLOBE.KBDORDP OR_
			INNER JOIN MODELS.KERING_GLOBE.KBMCLPP CO ON CO.COCDPO = OR_.ORCDPO AND CO.COCACT = OR_.ORCACT AND CO.COSTSE = OR_.ORORID  --EDITED REMOVED TRUNC ' '
			WHERE OR_.ORCDPO = '001' AND OR_.ORCACT = '100' --EDITED REMOVED TRUNC 
			GROUP BY CO.CORCDE
			) CO ON CO.CORCDE = PE.PERODP
/*BI ADDITIONAL JOIN*/
LEFT  JOIN  (
            SELECT SUBSTR(SG.SGSRID, 1, 6) AS CGCOD, SUBSTR(SG.SGSRID, 7, 2) AS CGSIE, SUBSTR(SG.SGSRID, 9, 2) AS CGANN, SUBSTR(SG.SGSRID, 11, 2) AS CGMOI, SUBSTR(SG.SGSRID, 13, 2) AS CGJOU ,
            MAX(SG.HVR_CHANGE_TIME)AS HVR_CHANGE_TIME
            FROM MODELS.KERING_GLOBE.KBDSSLP SG
            WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) <> '_'  --EDITED REMOVED TRUNC 
            GROUP BY SUBSTR(SG.SGSRID, 1, 6) , SUBSTR(SG.SGSRID, 7, 2) , SUBSTR(SG.SGSRID, 9, 2) , SUBSTR(SG.SGSRID, 11, 2), SUBSTR(SG.SGSRID, 13, 2)
            )SG1 ON SG1.CGCOD = PE.PECCHA AND SG1.CGSIE = PE.PESSCA AND SG1.CGANN = PE.PEANCA AND SG1.CGMOI = PE.PEMOCA AND SG1.CGJOU = PE.PEJOCA
LEFT  JOIN  (
            SELECT SUBSTR(SG.SGSRID, 10, 6) AS CGCOD, SUBSTR(SG.SGSRID, 1, 2) AS CGSIE, SUBSTR(SG.SGSRID, 3, 2) AS CGANN, SUBSTR(SG.SGSRID, 5, 2) AS CGMOI, SUBSTR(SG.SGSRID, 7, 2) AS CGJOU,
            MAX(SG.HVR_CHANGE_TIME)AS HVR_CHANGE_TIME 
            FROM MODELS.KERING_GLOBE.KBDSSLP SG
            WHERE SG.SGCDPO = '001' AND SG.SGCACT = '100' AND SUBSTR(SG.SGSRID, 9, 1) = '_' --EDITED REMOVED TRUNC 
            GROUP BY SUBSTR(SG.SGSRID, 10, 6) , SUBSTR(SG.SGSRID, 1, 2) , SUBSTR(SG.SGSRID, 3, 2) , SUBSTR(SG.SGSRID, 5, 2), SUBSTR(SG.SGSRID, 7, 2)
            )SG2 ON SG2.CGCOD = PE.PECCHA AND SG2.CGSIE = PE.PESSCA AND SG2.CGANN = PE.PEANCA AND SG2.CGMOI = PE.PEMOCA AND SG2.CGJOU = PE.PEJOCA
LEFT JOIN   (
            SELECT 
            TD.TDTREFB,
            MAX(YMA.MO_ARRIVAL_DATE) AS MO_ARRIVAL_DATE,
            MAX(YMB.MO_BAY_DATE) AS MO_BAY_DATE 	,
            MAX(YMD.MO_DEPARTURE_DATE) AS MO_DEPARTURE_DATE
            FROM TIEADRSLOTTASK TD --MISSING DEPENDENCY 
			LEFT  JOIN  (
						SELECT YM1.IDSITE,YM1.IDDEPOT,YM1.MOSTATE,YM1.MOAPPOINTMENT,MIN (MOARRIVALDATE) AS MO_ARRIVAL_DATE, MAX(YM1.MOLICENCEPLATE1) AS MOLICENCEPLATE1,TS.TSLID
						FROM HISTORYMOVEMENT YM1 --MISSING DEPENDENCY
						INNER JOIN TIEADRSLOT TS ON YM1.MOAPPOINTMENT = TS.TSLNUM --EDITED REMOVED TRUNC --MISSING DEPENDENCY
						WHERE  YM1.IDSITE = '1' AND YM1.IDDEPOT = '4' AND YM1.MOSTATE = 20
						GROUP BY YM1.IDSITE,YM1.IDDEPOT,YM1.MOSTATE,YM1.MOAPPOINTMENT,TS.TSLID
						) YMA ON  YMA.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM2.IDSITE,YM2.IDDEPOT,YM2.MOSTATE,YM2.MOAPPOINTMENT,MIN (YM2.HYTIMESTAMP) AS MO_BAY_DATE , MIN(D.DONAME) AS DOCK,TS.TSLID
						FROM HISTORYMOVEMENT YM2 --MISSING DEPENDENCY
						INNER JOIN DOCK D ON D.IDDOCK = YM2.IDDOCK --MISSING DEPENDENCY
						INNER JOIN TIEADRSLOT TS ON YM2.MOAPPOINTMENT = TS.TSLNUM --EDITED REMOVED TRUNC 
						WHERE  YM2.IDSITE = '1' AND YM2.IDDEPOT = '4' AND YM2.MOSTATE = 60 AND YM2.IDSTATUS = 3
						GROUP BY YM2.IDSITE,YM2.IDDEPOT,YM2.MOSTATE,YM2.MOAPPOINTMENT,TS.TSLID
						) YMB ON  YMB.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM4.IDSITE,YM4.IDDEPOT,YM4.MOSTATE,YM4.MOAPPOINTMENT,MIN (HYTIMESTAMP) AS MO_DEPARTURE_DATE, MIN(D.DONAME) AS DOCK,TS.TSLID
						FROM HISTORYMOVEMENT YM4 --MISSING DEPENDENCY
						INNER JOIN DOCK D ON  D.IDDOCK = YM4.IDDOCK --MISSING DEPENDENCY
						INNER JOIN TIEADRSLOT TS ON YM4.MOAPPOINTMENT = TS.TSLNUM --EDITED REMOVED TRUNC --MISSING DEPENDENCY
						WHERE  YM4.IDSITE = '1' AND YM4.IDDEPOT = '4' AND YM4.MOSTATE = 60 AND YM4.IDSTATUS = 11
						GROUP BY YM4.IDSITE,YM4.IDDEPOT,YM4.MOSTATE,YM4.MOAPPOINTMENT,TS.TSLID
						) YMBE ON YMBE.TSLID = TD.TDTTSLID 
            LEFT  JOIN  (
						SELECT YM3.IDSITE,YM3.IDDEPOT,YM3.MOSTATE,YM3.MOAPPOINTMENT,MIN (YM3.MODEPARTUREDATE ) AS MO_DEPARTURE_DATE,TS.TSLID
						FROM HISTORYMOVEMENT YM3 --MISSING DEPENDENCY
						INNER JOIN TIEADRSLOT TS ON YM3.MOAPPOINTMENT = TS.TSLNUM --EDITED REMOVED TRUNC --MISSING DEPENDENCY
						WHERE  YM3.IDSITE = '1' AND YM3.IDDEPOT = '4' AND YM3.MOSTATE = 99
						GROUP BY YM3.IDSITE,YM3.IDDEPOT,YM3.MOSTATE,YM3.MOAPPOINTMENT,TS.TSLID
						) YMD ON  YMD.TSLID = TD.TDTTSLID 
			--WHERE TD.HVR_CHANGE_TIME IS NULL --EDITED REMOVED TRUNC 
			GROUP BY TD.TDTREFB
			)YMX ON  YMX.TDTREFB = U6.U6LRDV 
WHERE 1=1
    AND OE.OECDPO = '001'
    AND OE.OECACT = '100'  
    AND OE.HVR_CHANGE_TIME IS NULL --EDITED REMOVED TRUNC 
    AND GREATEST(nvl(OE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(OE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(PREP_LINES.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(PE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PE.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(MOTHER.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(MOTHER.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(CHILD.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(CHILD.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(CG.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(CG.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(U9.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(U9.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(U6.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(U6.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(TP.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(TP.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(HU.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(HU.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(PREP_LINES_QTY.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(PREP_LINES_QTY.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                ,nvl(GS.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(GS.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
--                ,nvl(I37.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01'), nvl(I37.HVR_CHANGE_TIME,TIMESTAMP'1900-01-01 00:00:01')
                )
            >= (
                SELECT CAST(DATEADD(day, -1, or2.LAST_UPDATE) AS DATE)
                FROM OBJECT_RUN or2
                WHERE "OBJECT" = '02_OUTBOUND'
                )
--            > to_date('2025-01-30','YYYY-MM-DD') 
ORDER BY
    MOTHER.SHDILP ,
	LPAD(PE.PESSCA, 2, '0') || LPAD(PE.PEANCA, 2, '0') || LPAD(PE.PEMOCA, 2, '0') || LPAD(PE.PEJOCA, 2, '0') || ' ' || PE.PECCHA,
    MOTHER.SHRDOR;
