CREATE OR REPLACE VIEW CRT_KER_01_INBOUND (
  "PK_FACT_INBOUND","ENVIRONMENT","QUALITY","UDM","SKU","INBOUND_REFERENCE","ASN",
  "FORECAST_QUANTITY","ACTUAL_QUANTITY","EAN","MODEL","PART","COLOUR","SIZE","DROP",
  "PRODUCT_CATEGORY","PRODUCT_SUBCATEGORY","TRUCK_PLATE","BUILDING","DOCK",
  "TRUCK_GATE_ARRIVAL","TRUCK_BAY_ARRIVAL","TRUCK_BAY_DEPARTURE","TRUCK_GATE_DEPARTURE",
  "UDM_RECEIVING","UDM_POSITIONING","APPOINTMENT_DATE","UPDATED_DATE","ISDELETED"
) AS
WITH
/*-----------------------------------------------------------------------
RANGE_PARAMS
- Set APPLY_RANGE = TRUE  → view returns only rows in [START_TS, END_TS)
- Set APPLY_RANGE = FALSE → view returns all rows
-----------------------------------------------------------------------*/
RANGE_PARAMS AS (
  SELECT
    TRUE AS APPLY_RANGE,  -- flip to FALSE to load ALL data
    TO_TIMESTAMP_NTZ('2025-08-25 10:00:00') AS START_TS,
    TO_TIMESTAMP_NTZ('2025-08-26 00:00:00') AS END_TS  -- END is exclusive if you prefer, set 23:59:59.999
),

/*-----------------------------------------------------------------------
EXPECTED_EDI  (I22)
- Expected quantities from EDI.
- Range pushed on I22.HVR_CHANGE_TIME.
-----------------------------------------------------------------------*/
EXPECTED_EDI AS (
  SELECT 
    I22.I22NRC  AS INBOUNDREF, 
    I22.I22RFRC AS ASN, 
    I22.I22WHOU AS DEPOT,
    I22.I22CPNY AS ACTIVITY,
    I22.I22IDPA AS SUPPORT,
    I22.I22CITE AS ITEM, 
    NULL        AS GRADE,
    SUM(I22.I22QTEX) AS QTYEXP,
    0 AS QTYCNF,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_CNF,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_PUT,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_GATE,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_DOCK_IN,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_DOCK_OUT,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS DAT_DEPART,
    TIMESTAMP_NTZ ('1900-01-01 00:00:01') AS APPOINTMENT_DATE,
    NULL AS DOCK,
    NULL AS LPLATE,
    /* per-row change time for this branch */
    MAX(COALESCE(I22.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01'))) AS LASTUPDATE
  FROM MODELS.KERING_GLOBE.XPRC03P I22
  WHERE I22.I22WHOU = '001'
    AND I22.I22CPNY = '100'
    AND (
      (SELECT APPLY_RANGE FROM RANGE_PARAMS) = FALSE
      OR (I22.HVR_CHANGE_TIME >= (SELECT START_TS FROM RANGE_PARAMS)
          AND I22.HVR_CHANGE_TIME <  (SELECT END_TS   FROM RANGE_PARAMS))
    )
  GROUP BY
    I22.I22NRC, I22.I22RFRC, I22.I22WHOU, I22.I22CPNY, I22.I22IDPA, I22.I22CITE
),

/*-----------------------------------------------------------------------
RECEIVED_IPG  (RE + VG + CH + YMS)
- Received quantities when IPG is created, plus YMS timing enrichment.
- Range pushed on any of RE/VG/CH.HVR_CHANGE_TIME.
-----------------------------------------------------------------------*/
RECEIVED_IPG AS (
  SELECT
    RE.RENBLF AS INBOUNDREF,
    RE.RERREC AS ASN,
    VG.VGCDPO AS DEPOT,
    VG.VGCACT AS ACTIVITY,
    VG.VGNSUP AS SUPPORT,
    VG.VGCART AS ITEM,
    VG.VGCQAL AS GRADE,
    0 AS QTYEXP,
    SUM(VG.VGQMVG) AS QTYCNF,

    /* DAT_CNF from RE* fields (string -> timestamp) */
    MAX(
      TO_TIMESTAMP_NTZ(
        CASE WHEN RE.RETRVA = '0' THEN ('1900-01-01 00:00:01')
             ELSE LPAD(RE.RESVAL,2,'0')||'-'||LPAD(RE.REMVAL,2,'0')||'-'||LPAD(RE.REJVAL,2,'0')||' '||
                  SUBSTR(LPAD(RE.REHVAR,6,'0'),1,2)||':'||SUBSTR(LPAD(RE.REHVAR,6,'0'),3,2)||':'||SUBSTR(LPAD(RE.REHVAR,6,'0'),5,2)
        END
      )
    ) AS DAT_CNF,

    /* DAT_PUT from KBRECHP */
    MAX(CH.CHDAE9) AS DAT_PUT,

    /* YMS timings */
    MIN(YMA.MOArrivalDate)    AS DAT_GATE,
    MIN(YMB.MOBayDate)        AS DAT_DOCK_IN,
    MIN(YMBE.MODepartureDate) AS DAT_DOCK_OUT,
    MIN(YMD.MODepartureDate)  AS DAT_DEPART,

    /* Appointment from RE* received date time */
    MAX(
      TO_TIMESTAMP_NTZ(
        CASE WHEN RE.RESREC = 0 THEN ('1900-01-01 00:00:01')
             ELSE LPAD(RE.RESREC,2,'0')||'-'||LPAD(RE.REMREC,2,'0')||'-'||LPAD(RE.REJREC,2,'0')||' '||
                  SUBSTR(LPAD(RE.REHREC,6,'0'),1,2)||':'||SUBSTR(LPAD(RE.REHREC,6,'0'),3,2)||':'||SUBSTR(LPAD(RE.REHREC,6,'0'),5,2)
        END
      )
    ) AS APPOINTMENT_DATE,

    MIN(YMB.DOCK)                 AS DOCK,
    MIN(YMA.MOLICENCEPLATE1)      AS LPLATE,

    /* per-row change time for this branch */
    MAX(GREATEST(
      COALESCE(RE.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')),
      COALESCE(VG.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')),
      COALESCE(CH.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01'))
    )) AS LASTUPDATE
  FROM MODELS.KERING_GLOBE.HLRECPP RE
  JOIN MODELS.KERING_GLOBE.HLMVTGP VG
    ON RE.RECDPO = VG.VGCDPO
   AND RE.RECACT = VG.VGCACT
   AND RE.RENANN = VG.VGNANN
   AND VG.VGNREC = RE.RENREC
   AND VG.VGCTVG = '100'
  LEFT JOIN MODELS.KERING_GLOBE.KBRECHP CH
    ON CH.CHNANN = RE.RENANN
   AND CH.CHNREC = RE.RENREC
   AND CH.CHNUDM = VG.VGNSUP
   AND CH.CHNANF = RE.RENANN
   AND CH.CHNRFI = RE.RENREC
   AND CH.CHCDPO = RE.RECDPO
   AND CH.CHCACT = RE.RECACT

  /* Appointment resolution via RDV tables */
  LEFT JOIN (
    SELECT UP.UPCACT, UP.UPNANN, UP.UPNREC, UP.UPCDPO,
           MAX(LPAD(COALESCE(U6.U6NARV,'0'),2,'0') || LPAD(COALESCE(U6.U6NRDV,'0'),9,'0')) AS APPOINTMENT_NR,
           MAX(U6.U6NARV) AS U6NARV,
           MAX(U6.U6NRDV) AS U6NRDV, 
           MAX(U6.U6CTMR) AS CARRIER,
           MAX(U6.U6LRDV) AS U6LRDV
    FROM MODELS.KERING_GLOBE.HLRDVRP UP 
    LEFT JOIN MODELS.KERING_GLOBE.HLRDVTP U6
      ON U6.U6CDPO = UP.UPCDPO AND UP.UPNARV = U6.U6NARV AND UP.UPNRDV = U6.U6NRDV
    GROUP BY UP.UPCACT, UP.UPNANN, UP.UPNREC, UP.UPCDPO
  ) U6A
    ON RE.RECACT = U6A.UPCACT AND RE.RENANN = U6A.UPNANN AND RE.RENREC = U6A.UPNREC AND RE.RECDPO = U6A.UPCDPO 
  
  /* YMS timings (same schema used in outbound) */
  LEFT JOIN (
    SELECT YM1.IDSite, YM1.IDDepot, YM1.MOState, YM1.MOAppointment,
           MIN(YM1.MOArrivalDate) AS MOArrivalDate, MAX(YM1.MOLICENCEPLATE1) AS MOLICENCEPLATE1
    FROM HISTORYMOVEMENT YM1 
    WHERE YM1.IDSite = '1' AND YM1.IDDepot = '4' AND YM1.MOState = 20
    GROUP BY YM1.IDSite, YM1.IDDepot, YM1.MOState, YM1.MOAppointment
  ) YMA ON YMA.MOAppointment = U6A.U6LRDV 
  LEFT JOIN (
    SELECT YM2.IDSite, YM2.IDDepot, YM2.MOState, YM2.MOAppointment,
           MIN(YM2.HYTIMESTAMP) AS MOBayDate, MIN(d.DONAME) AS DOCK
    FROM HISTORYMOVEMENT YM2 
    JOIN DOCK d ON d.IDDOCK = YM2.IDDOCK 
    WHERE YM2.IDSite = '1' AND YM2.IDDepot = '4' AND YM2.MOState = 60 AND YM2.IDSTATUS = 3
    GROUP BY YM2.IDSite, YM2.IDDepot, YM2.MOState, YM2.MOAppointment
  ) YMB ON YMB.MOAppointment = U6A.U6LRDV 
  LEFT JOIN (
    SELECT YM4.IDSite, YM4.IDDepot, YM4.MOState, YM4.MOAppointment,
           MIN(YM4.HYTIMESTAMP) AS MODepartureDate, MIN(d.DONAME) AS DOCK
    FROM HISTORYMOVEMENT YM4 
    JOIN DOCK d ON d.IDDOCK = YM4.IDDOCK 
    WHERE YM4.IDSite = '1' AND YM4.IDDepot = '4' AND YM4.MOState = 60 AND YM4.IDSTATUS = 11
    GROUP BY YM4.IDSite, YM4.IDDepot, YM4.MOState, YM4.MOAppointment
  ) YMBE ON YMBE.MOAppointment = U6A.U6LRDV 
  LEFT JOIN (
    SELECT YM3.IDSite, YM3.IDDepot, YM3.MOState, YM3.MOAppointment,
           MIN(YM3.MODEPARTUREDATE) AS MODepartureDate
    FROM HISTORYMOVEMENT YM3 
    WHERE YM3.IDSite = '1' AND YM3.IDDepot = '4' AND YM3.MOState = 99
    GROUP BY YM3.IDSite, YM3.IDDepot, YM3.MOState, YM3.MOAppointment
  ) YMD ON YMD.MOAppointment = U6A.U6LRDV 

  WHERE RE.RECACT = '100'
    AND RE.RECDPO = '001'
    AND RE.RESVAL <> 0
    AND (
      (SELECT APPLY_RANGE FROM RANGE_PARAMS) = FALSE
      OR (
           COALESCE(RE.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) >= (SELECT START_TS FROM RANGE_PARAMS)
       AND COALESCE(RE.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) <  (SELECT END_TS   FROM RANGE_PARAMS)
        )
      OR (
           COALESCE(VG.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) >= (SELECT START_TS FROM RANGE_PARAMS)
       AND COALESCE(VG.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) <  (SELECT END_TS   FROM RANGE_PARAMS)
        )
      OR (
           COALESCE(CH.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) >= (SELECT START_TS FROM RANGE_PARAMS)
       AND COALESCE(CH.HVR_CHANGE_TIME, TIMESTAMP_NTZ ('1900-01-01 00:00:01')) <  (SELECT END_TS   FROM RANGE_PARAMS)
        )
    )
  GROUP BY
    RE.RENBLF, RE.RERREC, VG.VGCDPO, VG.VGCACT, VG.VGNSUP, VG.VGCART, VG.VGCQAL
),

/*-----------------------------------------------------------------------
XX_UNION
- Combine the two branches, then roll up per inboundref/asn/depot/activity/support/item.
-----------------------------------------------------------------------*/
XX_UNION AS (
  SELECT * FROM EXPECTED_EDI
  UNION ALL
  SELECT * FROM RECEIVED_IPG
),
YY_ROLLUP AS (
  SELECT
    XX.INBOUNDREF,
    XX.ASN,
    XX.DEPOT,
    XX.ACTIVITY,
    XX.SUPPORT,
    XX.ITEM,
    MAX(XX.GRADE) AS GRADE,
    SUM(COALESCE(XX.QTYEXP,0)) AS QTY_EXPECT,
    SUM(COALESCE(XX.QTYCNF,0)) AS QTY_CONFIRM,
    MAX(XX.DAT_CNF)        AS DATE_CNF,
    MAX(XX.DAT_PUT)        AS DATE_PUT,
    MAX(XX.LASTUPDATE)     AS LASTUPDATE,
    MAX(XX.DAT_GATE)       AS DAT_GATE,
    MAX(XX.DAT_DOCK_IN)    AS DAT_DOCK_IN,
    MAX(XX.DAT_DOCK_OUT)   AS DAT_DOCK_OUT,
    MAX(XX.DAT_DEPART)     AS DAT_DEPART,
    MAX(XX.DOCK)           AS DOCK,
    MAX(XX.LPLATE)         AS LPLATE,
    MAX(XX.APPOINTMENT_DATE) AS APPOINTMENT_DATE
  FROM XX_UNION XX
  GROUP BY XX.INBOUNDREF, XX.ASN, XX.DEPOT, XX.ACTIVITY, XX.SUPPORT, XX.ITEM
),

/*-----------------------------------------------------------------------
SOURCE_SELECT
- Final projection with product master and EAN enrichment.
-----------------------------------------------------------------------*/
SOURCE_SELECT AS (
  SELECT 
    TO_HEX(MD5(
      'B' || '-' || COALESCE(YY.DEPOT, 'NA') || '-' || COALESCE(YY.ACTIVITY, 'NA') || '/' ||
      COALESCE(YY.ITEM, 'NA') || '-' || COALESCE(YY.GRADE, 'NA') || '-' ||
      COALESCE(YY.SUPPORT, 'NA') || '-' || COALESCE(YY.INBOUNDREF, 'NA')
    )) AS "PK_FACT_INBOUND",

    'Reflex WEB B' AS "ENVIRONMENT",
    YY.GRADE       AS "QUALITY",
    YY.SUPPORT     AS "UDM",
    YY.ITEM        AS "SKU",
    YY.INBOUNDREF  AS "INBOUND_REFERENCE",
    YY.ASN         AS "ASN",
    YY.QTY_EXPECT  AS "FORECAST_QUANTITY",
    YY.QTY_CONFIRM AS "ACTUAL_QUANTITY",

    VI2.VICIVL AS "EAN",
    CA.CALMOD  AS "MODEL",
    CA.CAPART  AS "PART",
    CA.CACOLC  AS "COLOUR",
    CA.CASIZC  AS "SIZE",
    CA.CADROP  AS "DROP",
    CA.CAPRCA  AS "PRODUCT_CATEGORY",
    CA.CAPRFA  AS "PRODUCT_SUBCATEGORY",

    YY.LPLATE  AS "TRUCK_PLATE",
    'B'        AS "BUILDING",
    YY.DOCK    AS "DOCK",

    CASE WHEN YY.DAT_GATE        = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DAT_GATE        END AS "TRUCK_GATE_ARRIVAL",
    CASE WHEN YY.DAT_DOCK_IN     = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DAT_DOCK_IN     END AS "TRUCK_BAY_ARRIVAL",
    CASE WHEN YY.DAT_DOCK_OUT    = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DAT_DOCK_OUT    END AS "TRUCK_BAY_DEPARTURE",
    CASE WHEN YY.DAT_DEPART      = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DAT_DEPART      END AS "TRUCK_GATE_DEPARTURE",
    CASE WHEN YY.DATE_CNF        = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DATE_CNF        END AS "UDM_RECEIVING",
    CASE WHEN YY.DATE_PUT        = TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.DATE_PUT        END AS "UDM_POSITIONING",
    CASE WHEN YY.APPOINTMENT_DATE= TIMESTAMP_NTZ ('1900-01-01 00:00:01') THEN NULL ELSE YY.APPOINTMENT_DATE END AS "APPOINTMENT_DATE",

    YY.LASTUPDATE AS "UPDATED_DATE",
    '0' AS "ISDELETED"
  FROM YY_ROLLUP YY
  LEFT JOIN MODELS.KERING_GLOBE.KBCARTP CA
    ON CA.CACACT = YY.ACTIVITY
   AND CA.CASKUC = YY.ITEM
  LEFT JOIN (
    /* Latest EAN13 per SKU */
    SELECT h1.*
    FROM MODELS.KERING_GLOBE.HLVLIDP h1
    INNER JOIN (
      SELECT
        MAX(VIACRE || LPAD(VIMCRE,2,'0') || LPAD(VIJCRE,2,'0') || LPAD(VIHCRE,6,'0')) AS max_value,
        VICART
      FROM MODELS.KERING_GLOBE.HLVLIDP
      WHERE VICTYI = 'EAN13'
      GROUP BY VICART
    ) h2
      ON (h1.VIACRE || LPAD(h1.VIMCRE,2,'0') || LPAD(h1.VIJCRE,2,'0') || LPAD(h1.VIHCRE,6,'0')) = h2.max_value
     AND h1.VICART = h2.VICART
    WHERE h1.VICTYI = 'EAN13'
  ) VI2
    ON VI2.VICACT = CA.CACACT
   AND VI2.VICART = CA.CASKUC
),

/*-----------------------------------------------------------------------
RANGE_FILTER
- Final guard: enforce range at the very end on UPDATED_DATE.
-----------------------------------------------------------------------*/
RANGE_FILTER AS (
  SELECT s.*
  FROM SOURCE_SELECT s, RANGE_PARAMS p
  WHERE p.APPLY_RANGE = FALSE
     OR (s.UPDATED_DATE >= p.START_TS AND s.UPDATED_DATE < p.END_TS)
)

SELECT * FROM RANGE_FILTER
;
