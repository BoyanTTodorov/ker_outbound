CREATE OR REPLACE VIEW MODELS.KERING_GLOBE.CRT_KER_05_MASTERITEM AS
WITH
/*--------------------------------------------------------------
RANGE_PARAMS
- Set APPLY_RANGE = TRUE  to return only rows in [START_TS, END_TS)
- Set APPLY_RANGE = FALSE to return ALL rows
--------------------------------------------------------------*/
RANGE_PARAMS AS (
  SELECT
    TRUE AS APPLY_RANGE,  -- flip to FALSE to disable the window
    TO_TIMESTAMP_NTZ('2025-08-01 00:00:00') AS START_TS,
    TO_TIMESTAMP_NTZ('2025-08-31 23:59:59') AS END_TS
),

KBCARTP AS (
  SELECT CACACT, CASKUC, CASTNO, CALMOD, CAPART, CACOLC, CASIZC, CADROP, 
         CAPRCA, CAPRFA, CADEGR, CASUDE, CASCLA, CAMATN, CADESC, CABRDC, 
         CAHFFG, CATCIT, CAIHAM, CAICAL, CAPWGH, CAWTUM, CAPHGH, CAPWID, 
         CAPDPT, CAPVOL, CAVUOM, CADCUB, CATRCU, CAFTOO, CAFBOT, CAFHOR, 
         CAFVER, CAFTOP, CAPCOM, CAPOUC, CASTAC, CAFOWI, CAFOLD, CAFRAG, CADMAJ
  FROM MODELS.KERING_GLOBE.KBCARTP
),

LATEST_EAN AS (
  SELECT *
  FROM (
    SELECT *,
           ROW_NUMBER() OVER (
             PARTITION BY VICART
             ORDER BY VIACRE DESC, VIMCRE DESC, VIJCRE DESC, VIHCRE DESC
           ) AS RN
    FROM MODELS.KERING_GLOBE.HLVLIDP
    WHERE VICTYI = 'EAN13' AND VICIVL <> '3617132449729'
  )
  WHERE RN = 1
),

BASE AS (
  SELECT  
    UPPER(HEX_ENCODE(MD5_BINARY('B-' || CA.CASKUC))) AS PK_FACT_ITEMMASTERDATA,
    'Reflex WEB B' AS ENVIRONMENT,
    CA.CASKUC AS SKU,
    CA.CASTNO AS SKU_TYPE,
    VI.VICIVL AS EAN,
    CA.CALMOD AS MODEL,
    CA.CAPART AS PART,
    CA.CACOLC AS COLOUR,
    CA.CASIZC AS SIZE,
    CA.CADROP AS "DROP",
    CA.CAPRCA AS PRODUCT_CATEGORY,
    CA.CAPRFA AS PRODUCT_SUBCATEGORY,
    CA.CADEGR AS TECHNICAL_CLASS,
    CA.CASUDE AS TECHNICAL_SUBCLASS,
    CA.CASCLA AS ARTICLE_SUBCLASS,
    CA.CAMATN AS STYLE_MATERIAL_VARIANT,
    CA.CADESC AS ITEM_DESCRIPTION,
    CA.CABRDC AS BRAND,
    CA.CAHFFG AS HANG_FLAT_FLAG,
    CA.CATCIT AS CITES_FLAG,
    CA.CAIHAM AS DANGEROUS_FLAG,
    CA.CAICAL AS ALCOHOL_FLAG,
    CA.CAPWGH AS PIECE_WEIGHT,
    CA.CAWTUM AS WEIGHT_UOM,
    CA.CAPHGH AS PIECE_HEIGHT,
    CA.CAPWID AS PIECE_WIDTH,
    CA.CAPDPT AS PIECE_DEPTH,
    CA.CAPVOL AS PIECE_VOLUME,
    CA.CAVUOM AS VOLUME_UOM,
    (CA.CAPHGH * CA.CAPWID * CA.CAPDPT) / 1000 AS CALCULATED_VOLUME,
    CA.CADCUB AS MEASUREMENT_DATE,
    CASE 
      WHEN CA.CATRCU = '1' THEN 'Cubiscan'
      WHEN CA.CAPVOL = 0 THEN 'Not Measured'
      ELSE 'Manual'
    END AS MEASUREMENT_MODE,
    VL.VLCFAS AS STORAGE_FAMILY,
    CA.CAFTOO AS ONLY_ON_THE_TOP_FLAG,
    CA.CAFBOT AS AT_THE_BOTTOM_ONLY_FLAG,
    CA.CAFHOR AS HORIZONTALLY_FLAG,
    CA.CAFVER AS VERTICALLY_FLAG,
    CA.CAFTOP AS ON_TOP_FLAG,
    CA.CAPCOM AS PERCENTAGE_COMPRESSION,
    CA.CAPOUC AS POUCHABLE_FLAG,
    CA.CASTAC AS STACKABLE_FLAG,
    CA.CAFOWI AS FOLDING_IN_THE_WIDTH_FLAG,
    CA.CAFOLD AS FOLDING_FLAG,
    CA.CAFRAG AS FRAGILE_FLAG,

    /* unified last-change timestamp across item, article info, storage params, and EAN */
    GREATEST(
      COALESCE(CA.CADMAJ, TO_TIMESTAMP_NTZ('1900-01-01 00:00:00')),
      COALESCE(TRY_TO_TIMESTAMP_NTZ(LPAD(AR.ARSMAJ, 2, '0') || LPAD(AR.ARAMAJ, 2, '0') || LPAD(AR.ARMMAJ, 2, '0') || LPAD(AR.ARJMAJ, 2, '0') || LPAD(AR.ARHMAJ, 6, '0')), TO_TIMESTAMP_NTZ('1900-01-01 00:00:00')),
      COALESCE(TRY_TO_TIMESTAMP_NTZ(LPAD(VL.VLSMAJ, 2, '0') || LPAD(VL.VLAMAJ, 2, '0') || LPAD(VL.VLMMAJ, 2, '0') || LPAD(VL.VLJMAJ, 2, '0') || LPAD(VL.VLHMAJ, 6, '0')), TO_TIMESTAMP_NTZ('1900-01-01 00:00:00')),
      COALESCE(TRY_TO_TIMESTAMP_NTZ(LPAD(VI.VISMAJ, 2, '0') || LPAD(VI.VIAMAJ, 2, '0') || LPAD(VI.VIMMAJ, 2, '0') || LPAD(VI.VIJMAJ, 2, '0') || LPAD(VI.VIHMAJ, 6, '0')), TO_TIMESTAMP_NTZ('1900-01-01 00:00:00'))
    ) AS UPDATED_DATE,

    '0' AS ISDELETED
  FROM KBCARTP CA
  LEFT JOIN MODELS.KERING_GLOBE.HLARTIP AR 
    ON CA.CACACT = AR.ARCACT AND CA.CASKUC = AR.ARCART
  LEFT JOIN MODELS.KERING_GLOBE.HLARVLP VL 
    ON CA.CACACT = VL.VLCACT AND CA.CASKUC = VL.VLCART AND VL.VLCVLA = '03'
  LEFT JOIN LATEST_EAN VI 
    ON VI.VICACT = CA.CACACT AND VI.VICART = CA.CASKUC
),

RANGE_FILTER AS (
  SELECT b.*
  FROM BASE b, RANGE_PARAMS p
  WHERE p.APPLY_RANGE = FALSE
     OR (b.UPDATED_DATE >= p.START_TS AND b.UPDATED_DATE < p.END_TS)
)
SELECT * FROM RANGE_FILTER;
------------
CREATE OR REPLACE PROCEDURE SP_KER_05_MASTERITEM_LOAD(SAFETY_HOURS INTEGER DEFAULT 4)
RETURNS STRING
LANGUAGE SQL
AS
$$
BEGIN
  MERGE INTO FACT_KER_05_MASTERITEM t
  USING (
    SELECT *
    FROM   MODELS.KERING_GLOBE.CRT_KER_05_MASTERITEM
    WHERE  UPDATED_DATE >= DATEADD(
             hour, - :SAFETY_HOURS,
             COALESCE(
               (SELECT LAST_UPDATE FROM OBJECT_RUN WHERE "OBJECT" = '05_ITEMMASTERDATA'),
               TO_TIMESTAMP_NTZ('1900-01-01 00:00:00')
             )
           )
  ) s
  ON (t.PK_FACT_ITEMMASTERDATA = s.PK_FACT_ITEMMASTERDATA)

  WHEN MATCHED THEN UPDATE SET
      t.ENVIRONMENT                    = s.ENVIRONMENT,
      t.SKU                            = s.SKU,
      t.SKU_TYPE                       = s.SKU_TYPE,
      t.EAN                            = s.EAN,
      t.MODEL                          = s.MODEL,
      t.PART                           = s.PART,
      t.COLOUR                         = s.COLOUR,
      t.SIZE                           = s.SIZE,
      t."DROP"                         = s."DROP",
      t.PRODUCT_CATEGORY               = s.PRODUCT_CATEGORY,
      t.PRODUCT_SUBCATEGORY            = s.PRODUCT_SUBCATEGORY,
      t.TECHNICAL_CLASS                = s.TECHNICAL_CLASS,
      t.TECHNICAL_SUBCLASS             = s.TECHNICAL_SUBCLASS,
      t.ARTICLE_SUBCLASS               = s.ARTICLE_SUBCLASS,
      t.STYLE_MATERIAL_VARIANT         = s.STYLE_MATERIAL_VARIANT,
      t.ITEM_DESCRIPTION               = s.ITEM_DESCRIPTION,
      t.BRAND                          = s.BRAND,
      t.HANG_FLAT_FLAG                 = s.HANG_FLAT_FLAG,
      t.CITES_FLAG                     = s.CITES_FLAG,
      t.DANGEROUS_FLAG                 = s.DANGEROUS_FLAG,
      t.ALCOHOL_FLAG                   = s.ALCOHOL_FLAG,
      t.PIECE_WEIGHT                   = s.PIECE_WEIGHT,
      t.WEIGHT_UOM                     = s.WEIGHT_UOM,
      t.PIECE_HEIGHT                   = s.PIECE_HEIGHT,
      t.PIECE_WIDTH                    = s.PIECE_WIDTH,
      t.PIECE_DEPTH                    = s.PIECE_DEPTH,
      t.PIECE_VOLUME                   = s.PIECE_VOLUME,
      t.VOLUME_UOM                     = s.VOLUME_UOM,
      t.CALCULATED_VOLUME              = s.CALCULATED_VOLUME,
      t.MEASUREMENT_DATE               = s.MEASUREMENT_DATE,
      t.MEASUREMENT_MODE               = s.MEASUREMENT_MODE,
      t.STORAGE_FAMILY                 = s.STORAGE_FAMILY,
      t.ONLY_ON_THE_TOP_FLAG           = s.ONLY_ON_THE_TOP_FLAG,
      t.AT_THE_BOTTOM_ONLY_FLAG        = s.AT_THE_BOTTOM_ONLY_FLAG,
      t.HORIZONTALLY_FLAG              = s.HORIZONTALLY_FLAG,
      t.VERTICALLY_FLAG                = s.VERTICALLY_FLAG,
      t.ON_TOP_FLAG                    = s.ON_TOP_FLAG,
      t.PERCENTAGE_COMPRESSION         = s.PERCENTAGE_COMPRESSION,
      t.POUCHABLE_FLAG                 = s.POUCHABLE_FLAG,
      t.STACKABLE_FLAG                 = s.STACKABLE_FLAG,
      t.FOLDING_IN_THE_WIDTH_FLAG      = s.FOLDING_IN_THE_WIDTH_FLAG,
      t.FOLDING_FLAG                   = s.FOLDING_FLAG,
      t.FRAGILE_FLAG                   = s.FRAGILE_FLAG,
      t.UPDATED_DATE                   = s.UPDATED_DATE,
      t.ISDELETED                      = s.ISDELETED

  WHEN NOT MATCHED THEN INSERT (
      PK_FACT_ITEMMASTERDATA, ENVIRONMENT, SKU, SKU_TYPE, EAN, MODEL, PART, COLOUR, SIZE, "DROP",
      PRODUCT_CATEGORY, PRODUCT_SUBCATEGORY, TECHNICAL_CLASS, TECHNICAL_SUBCLASS, ARTICLE_SUBCLASS,
      STYLE_MATERIAL_VARIANT, ITEM_DESCRIPTION, BRAND, HANG_FLAT_FLAG, CITES_FLAG, DANGEROUS_FLAG, ALCOHOL_FLAG,
      PIECE_WEIGHT, WEIGHT_UOM, PIECE_HEIGHT, PIECE_WIDTH, PIECE_DEPTH, PIECE_VOLUME, VOLUME_UOM,
      CALCULATED_VOLUME, MEASUREMENT_DATE, MEASUREMENT_MODE, STORAGE_FAMILY,
      ONLY_ON_THE_TOP_FLAG, AT_THE_BOTTOM_ONLY_FLAG, HORIZONTALLY_FLAG, VERTICALLY_FLAG, ON_TOP_FLAG,
      PERCENTAGE_COMPRESSION, POUCHABLE_FLAG, STACKABLE_FLAG, FOLDING_IN_THE_WIDTH_FLAG, FOLDING_FLAG, FRAGILE_FLAG,
      UPDATED_DATE, ISDELETED
  )
  VALUES (
      s.PK_FACT_ITEMMASTERDATA, s.ENVIRONMENT, s.SKU, s.SKU_TYPE, s.EAN, s.MODEL, s.PART, s.COLOUR, s.SIZE, s."DROP",
      s.PRODUCT_CATEGORY, s.PRODUCT_SUBCATEGORY, s.TECHNICAL_CLASS, s.TECHNICAL_SUBCLASS, s.ARTICLE_SUBCLASS,
      s.STYLE_MATERIAL_VARIANT, s.ITEM_DESCRIPTION, s.BRAND, s.HANG_FLAT_FLAG, s.CITES_FLAG, s.DANGEROUS_FLAG, s.ALCOHOL_FLAG,
      s.PIECE_WEIGHT, s.WEIGHT_UOM, s.PIECE_HEIGHT, s.PIECE_WIDTH, s.PIECE_DEPTH, s.PIECE_VOLUME, s.VOLUME_UOM,
      s.CALCULATED_VOLUME, s.MEASUREMENT_DATE, s.MEASUREMENT_MODE, s.STORAGE_FAMILY,
      s.ONLY_ON_THE_TOP_FLAG, s.AT_THE_BOTTOM_ONLY_FLAG, s.HORIZONTALLY_FLAG, s.VERTICALLY_FLAG, s.ON_TOP_FLAG,
      s.PERCENTAGE_COMPRESSION, s.POUCHABLE_FLAG, s.STACKABLE_FLAG, s.FOLDING_IN_THE_WIDTH_FLAG, s.FOLDING_FLAG, s.FRAGILE_FLAG,
      s.UPDATED_DATE, s.ISDELETED
  );

  /* advance watermark */
  MERGE INTO OBJECT_RUN d
  USING (
    SELECT '05_ITEMMASTERDATA' AS "OBJECT",
           MAX(UPDATED_DATE)    AS LAST_UPDATE
    FROM   MODELS.KERING_GLOBE.CRT_KER_05_MASTERITEM
    WHERE  UPDATED_DATE >= DATEADD(
             hour, - :SAFETY_HOURS,
             COALESCE(
               (SELECT LAST_UPDATE FROM OBJECT_RUN WHERE "OBJECT" = '05_ITEMMASTERDATA'),
               TO_TIMESTAMP_NTZ('1900-01-01 00:00:00')
             )
           )
  ) s
  ON d."OBJECT" = s."OBJECT"
  WHEN MATCHED THEN UPDATE SET d.LAST_UPDATE = GREATEST(COALESCE(d.LAST_UPDATE, s.LAST_UPDATE), s.LAST_UPDATE)
  WHEN NOT MATCHED THEN INSERT ("OBJECT", LAST_UPDATE) VALUES (s."OBJECT", s.LAST_UPDATE);

  RETURN 'SP_KER_05_MASTERITEM_LOAD completed';
END;
$$;


